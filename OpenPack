#!/bin/bash
tput setaf 3 ; tput bold ; echo "" ; echo "Este script irá:" ; echo ""
echo "● Instalar e configurar o proxy squid nas portas 80, 3128, 8080 e 8799" ; echo "  para permitir conexões SSH para este servidor"
echo "● Configurar o OpenSSH para rodar na porta 22"
echo "● Configurar o OpenVPN para roda em uma porta a sua escolha" ; tput sgr0
echo ""
 cd
IP=$(wget -qO- ipv4.icanhazip.com)
read -p "Para continuar confirme o IP deste servidor: " -e -i $IP ipdovps
if [ -z "$ipdovps" ]
then
	tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "" ; echo " Você não digitou o IP deste servidor. Tente novamente. " ; echo "" ; echo "" ; tput sgr0
	exit 1
fi

echo ""
read -p "Deseja ativar a compressão SSH (pode aumentar o consumo de RAM)? [s/n]) " -e -i n sshcompression
echo ""
tput setaf 7 ; tput setab 4 ; tput bold ; echo "" ; echo "Aguarde a configuração automática" ; echo "" ; tput sgr0
sleep 3
apt-get update -y
apt-get upgrade -y
rm /bin/criarusuario /bin/expcleaner /bin/sshlimiter /bin/addhost /bin/listar /bin/sshmonitor /bin/ajuda > /dev/null
rm /root/ExpCleaner.sh /root/CriarUsuario.sh /root/sshlimiter.sh > /dev/null
apt-get install squid3 bc screen nano unzip dos2unix wget -y
killall apache2
apt-get purge apache2 -y
if [ -f "/usr/sbin/ufw" ] ; then
	ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
fi

echo "
Configurando SSH..."
sleep 3s
rm /etc/localtime && ln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
rm /etc/ssh/sshd_config
echo "Port 22
Protocol 2
KeyRegenerationInterval 3600
ServerKeyBits 1024
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin yes
PermitTunnel yes
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
PasswordAuthentication yes
X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no
AcceptEnv LANG LC_*
Subsystem sftp /usr/lib/openssh/sftp-server
UsePAM yes" > /etc/ssh/sshd_config

if [ -d "/etc/squid3/" ]
then
	echo "# Portas do SQUID
http_port 80
http_port 8080
http_port 3128
http_port 8799

# ACLs e Liberações
acl vps1 dstdomain -i 127.0.0.1
acl vps2 dstdomain -i localhost
acl vps3 dstdomain -i $IP
acl vps4 dstdomain -i .br
acl vps5 dstdomain -i .com
acl vps6 dstdomain -i .net
acl CONNECT method CONNECT
acl GET method GET
acl POST method POST
acl OPTIONS method OPTIONS
acl DELETE method DELETE
acl HEAD method HEAD
http_access allow vps1
http_access allow vps2
http_access allow vps3
http_access allow vps4
http_access allow vps5
http_access allow vps6
http_access allow accept
#cache deny all
http_access deny all

# Anonimo
forwarded_for off
via off

# Pipeline
#pipeline_prefetch on
" > /etc/squid3/squid.conf

	if [ ! -f "/etc/init.d/squid3" ]
	then
		service squid3 reload > /dev/null
	else
		/etc/init.d/squid3 reload > /dev/null
	fi
	if [ ! -f "/etc/init.d/ssh" ]
	then
		service ssh reload > /dev/null
	else
		/etc/init.d/ssh reload > /dev/null
	fi
fi
if [ -d "/etc/squid/" ]
then
	echo "# Portas do SQUID
http_port 80
http_port 8080
http_port 3128
http_port 8799

# ACLs e Liberações
acl vps1 dstdomain -i 127.0.0.1
acl vps2 dstdomain -i localhost
acl vps3 dstdomain -i $IP
acl vps4 dstdomain -i .br
acl vps5 dstdomain -i .com
acl vps6 dstdomain -i .net
acl CONNECT method CONNECT
acl GET method GET
acl POST method POST
acl OPTIONS method OPTIONS
acl DELETE method DELETE
acl HEAD method HEAD
http_access allow vps1
http_access allow vps2
http_access allow vps3
http_access allow vps4
http_access allow vps5
http_access allow vps6
#cache deny all
http_access allow accept
http_access deny all

# Anonimo
forwarded_for off
via off

# Pipeline
#pipeline_prefetch on
" > /etc/squid/squid.conf

	if [ ! -f "/etc/init.d/squid" ]
	then
		service squid reload > /dev/null
	else
		/etc/init.d/squid reload > /dev/null
	fi
	if [ ! -f "/etc/init.d/ssh" ]
	then
		service ssh reload > /dev/null
	else
		/etc/init.d/ssh reload > /dev/null
	fi
fi

if [[ "$sshcompression" = 's' ]]; then
	grep -v "^Compression yes" /etc/ssh/sshd_config > /tmp/sshcp && mv /tmp/sshcp /etc/ssh/sshd_config
	echo "Compression yes" >> /etc/ssh/sshd_config
fi
if [[ "$sshcompression" = 'n' ]]; then
	grep -v "^Compression yes" /etc/ssh/sshd_config > /tmp/sshcp && mv /tmp/sshcp /etc/ssh/sshd_config
fi
echo -e "\033[0m"

wget https://raw.githubusercontent.com/matheuslarcher20/VpsPack/master/OpenVPN && bash OpenVPN
echo -e "\033[0m"
mv OpenVPN /bin/OpenVPN
chmod +x /bin/OpenVPN
rm OpenVPN* 
echo -e "Proxy Squid Instalado e rodando nas portas: \033[1;32m80, 3128, 8080 \033[0me\033[1;32m 8799\033[0m"
echo -e "\033[1;32mOpenSSH\033[0m rodando na porta \033[1;32m22\033[0m"
echo ""
echo -e "Execute \033[1;32mOpenVPN\033[0m para abrir menu de opcao"
echo ""
echo -e "O \033[1;32mVpsPack \033[0msera instalado!!"
sleep 2s
read -p " Pressione Enter para continuar ou Ctrl + C para sair "
wget https://raw.githubusercontent.com/matheuslarcher20/VpsPack-master/master/VpsPack-install && bash VpsPack-install

